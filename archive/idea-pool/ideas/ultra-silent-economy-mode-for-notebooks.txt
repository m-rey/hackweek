====== ultra silent (economy) mode for notebooks ======

/* If this is your first time using the Idea Pool, please take a second to read the  comment at the end of this template, which explains how to use tags.  

Topic tags: Community, Security, QA, Kernel, Desktop, Virtualization, Web20, Mobile, Management, Network, UnixFeature, Server, LowPower, Performance, LAMP, Graphics, DevTool, Mono, IdeaPool
Product tags: openSUSE, SLES, SLED, SLERT, SLEPOS, SLETC
Status tags: Idea, InProgress, TryMe, InBuildService, Done, Shipped
Help tags: HelpWanted, HW-Hacker, HW-Tester, HW-Designer, HW-PM, HW-Docs, HW-Packaging

Separate tags with a space like this:
{{tag> blargle fizzbozz bimbledeedoo}}
*/

{{tag>Idea Mobile LowPower Desktop Management}}

===== Description =====
/* Describe your idea here. */

While tinkering my private digital linux picture frame i recognized the need for a special silent
mode for this quite old and noisy hardware.  This also seems to bring at least some power savings (having
the harddisks spun down over very long (>>10 minutes) periods).

The biggest source of noise on my machine were its harddisk and its fan. So my strategy was to spin the
disk down as long as possible (preferably without risking filesystem integrity too much) and to power down the cpu as much as possible.
The kernel laptop_mode together with the scripts for it (in the kernel sources) brings nearly everything
needed (at least for experts). I additionally wrote a very small'n'lightweight daemon (based on the
disk-monitoring code out of the kernel source tree) monitoring if harddisk has spun up again, then it uses a
registered hook to again cache everything thats about to be needed in the next future and spins the harddisk
down again.
Together with other techniques (like cpufrequency scaling, cpu throttling, fan control etc.) i was able to turn a very noisy and crappy old laptop into a totally silent system.

=> What i was thinking of here is to polish this all up and integrate it so a normal user can easily set this
up and use this mode with a few clicks.
Probably there are also other occasions where users need their notebooks to be very quiet and/or to save as much power as possible. E.g. think of a student needing to read a very long pdf or textfile on his notebook, sitting in a library having no powersupply with him.

To make this most efficient the tool could ask the user what files he will probably want to access (best of course readonly) while in this ultrasilent mode (e.g. a pdf he wants to read). The tool would then cache the file and the application (and dependent libs) he needs to read this file, change the machine settings to get into ultrasilent mode, monitor for "accidental" disk wakeups (with above mentioned daemon) .. cache and spin-down again and in case of repeated disk wakeups in a short time auto-disable the ultrasilent mode and warning the user he or some app accessed not-cached/predefined files.


===== People =====
/* This section is for listing all of the people involved in this idea or project:
  - The originator(s) of the idea
  - Interested people who might later help out with implementing this idea
  - Experts or knowledgeable people who could give advice about this idea

If you are already working on this project, and you need help, you can use one of the  HelpWanted tags to say so, and then write some specific details about the kinds of help that you need here. */

Frank Seidel originated this idea.  No one is currently working on implementing this idea (it's up for grabs!).

===== Related Materials =====
/* Links, mockups, screen captures, files. */


/* How to Use Tags

All idea pages are tagged to make them easier to find and to indicate to the rest of the world the current state of your project.

You can apply as many topic and product tags to your idea as you want.

Status Tags
-----------
Idea: No one is working on this idea yet.
InProgress:  The project is underway.  When you apply this tag to an idea, please also edit the People section of the page to indicate who is working on the project. 
TryMe:  This project is at the point where other people can try it.  Include a link for code/packages in the page so people can find it.
InBuildService:  Idea's implementation posted in the openSUSE build service.  Provide a link.
Done:  The idea has been fully realized (though it may not yet be in a product).
Shipped:  Hooray!

Help tags:  
----------

You can apply Help tags to your project to recruit other people to help you with its implementation.  Don't apply Help tags to a project which is not already being implemented.  
Before applying any HelpWanted tags to your project, make sure that you've listed the current project contributors and leaders in the People section of this page, so that potential contributors know whom to contact.

HelpWanted:  This is a generic tag that you can apply to indicate that you want help on a project.
HW-Hacker: You need help writing code.
HW-Tester: You have something that you want help testing, or writing unit tests for.
HW-Designer: You have a great idea but can't come up with the UI? Ask for help.
HW-PM: You want help from a product manager, to get market research or talk to a partner.
HW-Docs: You want someone to help you write documentation for your project.
HW-Packaging: Your project is going well but you want someone to help you build packages out of it.
*/


/*
Topic tags: Community, Security, Kernel, Desktop, Virtualization, Web20, Mobile, Management, Network, UnixFeature, Server, LowPower, Performance, LAMP, Graphics, DevTool, Mono, IdeaPool
Product tags: openSUSE, SLES, SLED, SLERT, SLEPOS, SLETC
Help: HelpWanted, HW-Hacker, HW-Tester, HW-Designer, HW-PM, HW-Docs, HW-Packaging
Status: Idea, InProgress, TryMe, InBuildService, Done, Shipped

Separate your tags with a space (e.g "tag>Idea Server Performance").
*/

/*Happy Hacking everyone!*/