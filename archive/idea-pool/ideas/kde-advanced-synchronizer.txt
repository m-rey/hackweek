====== On-fly two-way synchronizer for KDE ======

/* If this is your first time using the Idea Pool, please take a second to read the  comment at the end of this template, which explains how to use tags.  

Topic tags: Community, Security, QA, Kernel, Desktop, Virtualization, Web20, Mobile, Management, Network, UnixFeature, Server, LowPower, Performance, LAMP, Graphics, DevTool, Mono, IdeaPool
Product tags: openSUSE, SLES, SLED, SLERT, SLEPOS, SLETC
Status tags: Idea, InProgress, TryMe, InBuildService, Done, Shipped
Help tags: HelpWanted, HW-Hacker, HW-Tester, HW-Designer, HW-PM, HW-Docs, HW-Packaging

Separate tags with a space like this:
{{tag> blargle fizzbozz bimbledeedoo}}
*/

{{tag>Idea openSUSE Desktop}}

===== Introduction: =====

Although there are many high quality "backup" or mirroring utilities (e.g. rsync), many users would welcome a tool for data synchronization - i.e. propagate differences from two sides being synchronized and make both sides to look the same (therefore two-way). Luckily, there is one: unison (see [[http://www.cis.upenn.edu/~bcpierce/unison/|unison homepage]]). However, even if unison works very well, it has some disadvantages compared to the tool proposed in this idea. One of them is that the described tool should synchronize not only files with peer PC (through network), but also data from KDE PIM applications as well as from mobile devices connected to the PC.

===== What the proposed synchronizer should be capable of: =====

  * KDE application (to work with KDE PIM apps)
  * started automatically with KDE and docked in systray to be able to inform users about its work and to interact with users
    * specify when and how often synchronize changes
    * immediately
    * once per x minutes
    * on user demand
    * never
    * each choice can be assigned to individual network or connection medium (e.g. when connected through modem, synchronize only on user demand)
  * file synchronization with peer PC through network (exactly like unison):
    * configure what file/directory masks to ignore or allow
  * PIM synchronization with peer PC through network (cannot be simply done by unison)
    * configure which PIM applications (record types) to synchronize or ignore
  * able to synchronize data with mobile devices as well (mobile/celluar phones, pocket PCs, etc., based on modules in opensync)
  * notify user about conflicts and let user to solve them
  * preferably SSH encrypted communication when synchronizing through network (however, can be passed through tunnel)
  * configurable niceness


===== What technologies could be used: =====

  * KitchenSync (for KDE 4) with opensync as synchronization framework (modules for KDE PIM applications already exist in opensync), new opensync modules will probably be, however, required
  * inotify for the monitoring of files changed (like beagle)


===== Possible problems: =====

  * locking of files during transfer - content of synchronized files cannot be changed from other tools (even non KDE)
  * delayed synchronization of files currently being created or changed (edited)
  * conflicts when a file on both sides is changed at the same time (however, should not be very often ...)


===== People =====
/* This section is for listing all of the people involved in this idea or project:
  - The originator(s) of the idea
  - Interested people who might later help out with implementing this idea
  - Experts or knowledgeable people who could give advice about this idea

If you are already working on this project, and you need help, you can use one of the  HelpWanted tags to say so, and then write some specific details about the kinds of help that you need here. */

Daniel Tihelka originated this idea.  No one is currently working on implementing this idea (it's up for grabs!).


/* How to Use Tags

All idea pages are tagged to make them easier to find and to indicate to the rest of the world the current state of your project.

You can apply as many topic and product tags to your idea as you want.

Status Tags
-----------
Idea: No one is working on this idea yet.
InProgress:  The project is underway.  When you apply this tag to an idea, please also edit the People section of the page to indicate who is working on the project. 
TryMe:  This project is at the point where other people can try it.  Include a link for code/packages in the page so people can find it.
InBuildService:  Idea's implementation posted in the openSUSE build service.  Provide a link.
Done:  The idea has been fully realized (though it may not yet be in a product).
Shipped:  Hooray!

Help tags:  
----------

You can apply Help tags to your project to recruit other people to help you with its implementation.  Don't apply Help tags to a project which is not already being implemented.  
Before applying any HelpWanted tags to your project, make sure that you've listed the current project contributors and leaders in the People section of this page, so that potential contributors know whom to contact.

HelpWanted:  This is a generic tag that you can apply to indicate that you want help on a project.
HW-Hacker: You need help writing code.
HW-Tester: You have something that you want help testing, or writing unit tests for.
HW-Designer: You have a great idea but can't come up with the UI? Ask for help.
HW-PM: You want help from a product manager, to get market research or talk to a partner.
HW-Docs: You want someone to help you write documentation for your project.
HW-Packaging: Your project is going well but you want someone to help you build packages out of it.
*/


/*
Topic tags: Community, Security, Kernel, Desktop, Virtualization, Web20, Mobile, Management, Network, UnixFeature, Server, LowPower, Performance, LAMP, Graphics, DevTool, Mono, IdeaPool
Product tags: openSUSE, SLES, SLED, SLERT, SLEPOS, SLETC
Help: HelpWanted, HW-Hacker, HW-Tester, HW-Designer, HW-PM, HW-Docs, HW-Packaging
Status: Idea, InProgress, TryMe, InBuildService, Done, Shipped

Separate your tags with a space (e.g "tag>Idea Server Performance").
*/

/*Happy Hacking everyone!*/