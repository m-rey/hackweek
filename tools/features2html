#!/usr/bin/ruby

require "rubygems"
require "nokogiri"
require "haml"

def render_title
  @title
end

def render_content
  @content
end

output = ARGV[0]

if !output
  STDERR.puts "Usage: features2html <output-directory>"
  exit 1
end

if !File.exists? output
  STDERR.puts "Error: output directory '#{output}' doesn't exist."
  exit 1
end

features_file = File.expand_path('../../archive/fate.xml',__FILE__)

doc = Nokogiri::XML(File.read(features_file))
doc.xpath( "//feature" ).each do |feature|
  @title = feature.xpath("title").text
  
  next if @title =~ /\//

  filename = @title.gsub( / /, "-" ) + ".html"
  
  out = ""
  out += "<h2>Description</h2>\n"
  out += feature.xpath("description/richtext").to_s + "\n"

  @description = feature.xpath("description/richtext").to_s

  comments = Array.new
  
  feature.xpath("discussion/comment").each do |c|
    comment = Hash.new
      
    name = c.xpath('author/person/fullname').text
    name.gsub! /\n*/, ""
    comment[:author] = name
    
    comment[:text] = c.xpath("richtext").to_s

    comments.push comment
  end

  if !comments.empty?
    out += "<h2>Comments</h2>\n"
    comments.each do |comment|
      out += "<p><b>By #{comment[:author]}:</b>\n"
      out += comment[:text] + "</p>\n"
    end
  end

  @content = out
  
  puts "Creating #{filename}"

  template = File.read File.expand_path('../templates/page.haml', __FILE__ )
  engine = Haml::Engine.new template
  
  File.open output + "/" + filename, "w" do |file|
    file.puts engine.render( binding )
  end
end
